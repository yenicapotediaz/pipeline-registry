# Default values for authenticated-registry.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

images:
  auth: cesanta/docker_auth:1
  pullPolicy: Always

log:
  verbocity: 2

dockerAuth:
  # docker auth config, per https://github.com/cesanta/docker_auth/blob/master/examples/reference.yml
  users:
  # Password is specified as a BCrypt hash. Use `htpasswd -B USERNAME` to generate.
  "admin":
    password: "/static-auth.txt"
  "public":
    password: "/static-auth.txt"

  "" : {}  # anonymous

  # GitHub authentication.
  # ==! NB: DO NOT ENTER YOUR GITHUB PASSWORD AT "docker login". IT WILL NOT WORK.
  # Instead, Auth server maintains a database of GitHub authentication tokens.
  # Go to the server's port as HTTPS with your browser and follow the "Login with GitHub account" link.
  # Once signed in, you will get a throw-away password which you can use for Docker login.
  github_auth:
    organization: "samsung-cnct"   # Optional. If set, only logins from this organization are accepted.
    # client_id and client_secret for API access. Required.
    # You can register a new application here: https://github.com/settings/developers
    # NB: Make sure JavaScript origins are configured correctly, and that third-party
    # cookies are not blocked in the browser being used to login.
    client_id: "1223123456"
    # Either client_secret or client_secret_file is required. Use client_secret_file if you don't
    # want to have sensitive information checked in.
    # client_secret: "verysecret"
    client_secret_file: "/path/to/client_secret.txt"
    # Either token_db file for storing of server tokens.
    token_db: "/somewhere/to/put/github_tokens.ldb"
    # How long to wait when talking to GitHub servers. Optional.
    http_timeout: "10s"
    # How long to wait before revalidating the GitHub token. Optional.
    revalidate_after: "1h"
    # The Github Web URI in case you are using Github Enterprise.
    # Includes the protocol, without trailing slash. Optional - defaults to: https://github.com
    # github_web_uri: "https://github.acme.com"
    # The Github API URI in case you are using Github Enterprise.
    # Includes the protocol, without trailing slash. - defaults to: https://api.github.com
    # github_api_uri: "https://github.acme.com/api/v3"
  acl:
  # Admin has full access to everything.
  - match: {account: "admin"}
    actions: ["*"]
  # User "user" can pull stuff.
  - match: {account: "public"}
    actions: ["pull"]
  # Anonymous access to the catalog
  - match: {account: ""}
    actions: ["pull"]
  # Access is denied by default.
dockerRegistry: {}
  # docker-registry config, per https://github.com/kubernetes/charts/tree/master/stable/docker-registry
  storage:
   s3:
     region: us-west-2
     bucket: pipeline-registry.s3-website-us-west-2.amazonaws.com

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
