apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "docker-auth.name" . }}
  labels:
    app: {{ template "docker-auth.fullname" . }}
    chart: {{ template "docker-auth.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "docker-auth.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "docker-auth.fullname" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: "docker-auth"
          image: {{ .Values.imageRepository }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command: ['--v={{ .Values.logVerbocity }}', '/config/auth_config.yml']
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: config-secret
              mountPath: /config
{{- if .Values.authCertSecret }}
            - name: auth-cert-secret
              mountPath: {{ .Values.authCertMount}}
{{- end }}
          resources:
      volumes:
        - name: config-secret
          secret:
            secretName: docker-auth-config
{{- if .Values.authCertSecret }}
        - name: auth-cert-secret
          secret:
            secretName: {{ .Values.authCertSecret}}
{{- end }}
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
